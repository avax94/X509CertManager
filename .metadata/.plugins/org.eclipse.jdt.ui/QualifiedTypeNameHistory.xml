<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.security.AlgorithmParameters"/>
<fullyQualifiedTypeName name="sm130075.vl130298.crypto.Algorithm"/>
<fullyQualifiedTypeName name="java.security.KeyStore.PrivateKeyEntry"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.security.cert.CertificateParsingException"/>
<fullyQualifiedTypeName name="java.nio.file.Path"/>
<fullyQualifiedTypeName name="java.nio.file.Paths"/>
<fullyQualifiedTypeName name="java.io.File"/>
<fullyQualifiedTypeName name="sun.security.util.DerValue"/>
<fullyQualifiedTypeName name="sun.security.x509.PKIXExtensions"/>
<fullyQualifiedTypeName name="java.io.FileOutputStream"/>
<fullyQualifiedTypeName name="java.math.BigInteger"/>
<fullyQualifiedTypeName name="sm130075.vl130298.crypto.KeyStoreManager"/>
<fullyQualifiedTypeName name="sun.security.x509.CertificateSubjectName"/>
<fullyQualifiedTypeName name="sun.security.tools.keytool.CertAndKeyGen"/>
<fullyQualifiedTypeName name="sm130075.vl130298.crypto.X509CertInformations"/>
<fullyQualifiedTypeName name="sun.security.x509.CertificateIssuerName"/>
<fullyQualifiedTypeName name="javax.crypto.CipherOutputStream"/>
<fullyQualifiedTypeName name="java.io.FileInputStream"/>
<fullyQualifiedTypeName name="java.io.BufferedInputStream"/>
<fullyQualifiedTypeName name="javax.crypto.CipherInputStream"/>
<fullyQualifiedTypeName name="java.io.ByteArrayInputStream"/>
<fullyQualifiedTypeName name="java.io.ByteArrayOutputStream"/>
<fullyQualifiedTypeName name="java.nio.file.Files"/>
<fullyQualifiedTypeName name="sm130075.vl130298.exception.NoSuchAliasException"/>
<fullyQualifiedTypeName name="sun.misc.BASE64Encoder"/>
<fullyQualifiedTypeName name="sun.misc.BASE64Decoder"/>
<fullyQualifiedTypeName name="sm130075.vl130298.exception.CertificateAlreadySignedException"/>
<fullyQualifiedTypeName name="sun.security.pkcs10.PKCS10Attribute"/>
<fullyQualifiedTypeName name="sun.security.pkcs10.PKCS10Attributes"/>
<fullyQualifiedTypeName name="sun.security.x509.X509CertInfo"/>
<fullyQualifiedTypeName name="sun.security.x509.CertificateExtensions"/>
<fullyQualifiedTypeName name="sun.security.x509.SerialNumber"/>
<fullyQualifiedTypeName name="sun.security.pkcs.SignerInfo"/>
<fullyQualifiedTypeName name="sun.security.pkcs.SigningCertificateInfo"/>
<fullyQualifiedTypeName name="sun.security.util.ObjectIdentifier"/>
<fullyQualifiedTypeName name="sun.security.pkcs.PKCS9Attribute"/>
<fullyQualifiedTypeName name="sun.security.x509.CertificateX509Key"/>
<fullyQualifiedTypeName name="sm130075.vl130298.crypto.pkcs9"/>
<fullyQualifiedTypeName name="sun.security.x509.CertificateSerialNumber"/>
<fullyQualifiedTypeName name="sun.security.util.DerOutputStream"/>
<fullyQualifiedTypeName name="sun.security.x509.CertificateAlgorithmId"/>
<fullyQualifiedTypeName name="sun.security.x509.CertificateValidity"/>
<fullyQualifiedTypeName name="sun.security.x509.AlgorithmId"/>
<fullyQualifiedTypeName name="sun.security.util.DerInputStream"/>
<fullyQualifiedTypeName name="sun.security.x509.CertificateVersion"/>
<fullyQualifiedTypeName name="sm130075.vl130298.sun.PKCS9Attribute"/>
<fullyQualifiedTypeName name="java.security.cert.Certificate"/>
<fullyQualifiedTypeName name="java.security.PrivateKey"/>
<fullyQualifiedTypeName name="sm130075.vl130298.crypto.CSR"/>
<fullyQualifiedTypeName name="sun.security.x509.X509CertImpl"/>
<fullyQualifiedTypeName name="sun.security.ssl.KeyManagerFactoryImpl.X509"/>
<fullyQualifiedTypeName name="javax.security.cert.X509Certificate"/>
<fullyQualifiedTypeName name="sun.security.x509.X500Name"/>
<fullyQualifiedTypeName name="java.security.KeyPair"/>
<fullyQualifiedTypeName name="sm130075.vl130298.crypto.UnsignedCert"/>
<fullyQualifiedTypeName name="sm130075.vl130298.exception.UnknownCertificateException"/>
<fullyQualifiedTypeName name="sun.security.x509.BasicConstraintsExtension"/>
<fullyQualifiedTypeName name="sun.security.x509.IssuerAlternativeNameExtension"/>
<fullyQualifiedTypeName name="sun.security.x509.KeyUsageExtension"/>
</qualifiedTypeNameHistroy>
